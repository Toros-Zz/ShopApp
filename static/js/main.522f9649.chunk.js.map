{"version":3,"sources":["store/actions.ts","store/selectors.ts","components/ModalAdd/ModalAdd.tsx","components/ModalRemove/ModalRemove.tsx","components/Loader/Loader.tsx","components/ProductsList/ProductsList.tsx","components/CommentsList/CommentsList.tsx","components/ModalEdit/ModalEdit.tsx","components/ViewProduct/ViewProduct.tsx","App.tsx","store/index.ts","index.tsx"],"names":["OPEN_MODAL_ADD","CLOSE_MODAL_ADD","OPEN_MODAL_REMOVE","CLOSE_MODAL_REMOVE","OPEN_MODAL_EDIT","CLOSE_MODAL_EDIT","ADD_PRODUCT","ADD_PRODUCT_LIST","REMOVE_PRODUCT","SET_ID_REMOTE_PRODUCT","SET_ID_VIEW_PRODUCT","SET_VIEW_PRODUCT","EDIT_PRODUCT","setViewProductEdit","payload","type","closeModalEdit","closeModalAdd","closeModalRemove","setIdForViewProduct","hasModalAdd","state","isModalAdd","hasModalRemove","isModalRemove","hasModalEdit","isModalEdit","getProducts","allProducts","getIdRemoteProduct","idRemoteProduct","getIdForViewProduct","idForViewProduct","getViewProduct","viewProduct","ModalAdd","isOpen","useSelector","dispatch","useDispatch","useState","imageUrl","setImageUrl","productName","setName","count","setCount","sideWidth","setSideWidth","sideHeight","setSideHeight","weight","setWeight","errorMessage","setErrorMessage","handlerCloseModal","handlerInputs","event","currentTarget","name","value","replaceAll","addNewProduct","product","newProduct","id","size","width","height","comments","Modal","setAppElement","onRequestClose","className","onSubmit","preventDefault","htmlFor","required","placeholder","onChange","onClick","ModalRemove","productId","handlerDelete","a","Loader","ProductsList","products","useEffect","productsServer","handlerDeleteProduct","handlerDetailsProduct","length","map","src","alt","CommentsList","productComments","setProductComments","commentsServer","filter","comment","prevProductComments","description","ModalEdit","selectedProduct","saveNewProduct","ViewProduct","allProduct","find","item","App","initialState","store","createStore","action","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.522f9649.chunk.js","sourcesContent":["export const OPEN_MODAL_ADD = 'OPEN_MODAL_ADD';\nexport const CLOSE_MODAL_ADD = 'CLOSE_MODAL_ADD';\nexport const OPEN_MODAL_REMOVE = 'OPEN_MODAL_REMOVE';\nexport const CLOSE_MODAL_REMOVE = 'CLOSE_MODAL_REMOVE';\nexport const OPEN_MODAL_EDIT = 'OPEN_MODAL_EDIT';\nexport const CLOSE_MODAL_EDIT = 'CLOSE_MODAL_EDIT';\nexport const ADD_PRODUCT = 'ADD_PRODUCT';\nexport const ADD_PRODUCT_LIST = 'ADD_PRODUCT_LIST';\nexport const REMOVE_PRODUCT = 'REMOVE_PRODUCT';\nexport const SET_ID_REMOTE_PRODUCT = 'SET_ID_REMOTE_PRODUCT';\nexport const SET_ID_VIEW_PRODUCT = 'SET_ID_VIEW_PRODUCT';\nexport const SET_VIEW_PRODUCT = 'SET_VIEW_PRODUCT';\nexport const EDIT_PRODUCT = 'EDIT_PRODUCT';\n\nexport const setViewProductEdit = (payload: Product | null) => {\n  return ({\n    type: SET_VIEW_PRODUCT,\n    payload,\n  });\n};\n\nexport const editProduct = (payload: Product) => {\n  return ({\n    type: EDIT_PRODUCT,\n    payload,\n  });\n};\n\nexport const closeModalEdit = () => ({\n  type: CLOSE_MODAL_EDIT,\n  payload: false,\n});\n\nexport const openModalEdit = () => ({\n  type: OPEN_MODAL_EDIT,\n  payload: true,\n});\n\nexport const closeModalAdd = () => ({\n  type: CLOSE_MODAL_ADD,\n  payload: false,\n});\n\nexport const openModalAdd = () => ({\n  type: OPEN_MODAL_ADD,\n  payload: true,\n});\n\nexport const closeModalRemove = () => ({\n  type: CLOSE_MODAL_REMOVE,\n  payload: false,\n});\n\nexport const openModalRemove = () => ({\n  type: OPEN_MODAL_REMOVE,\n  payload: true,\n});\n\nexport const addOneProduct = (payload: Product) => ({\n  type: ADD_PRODUCT,\n  payload,\n});\n\nexport const addProductList = (payload: Product[]) => ({\n  type: ADD_PRODUCT_LIST,\n  payload,\n});\n\nexport const removeProduct = (payload: number) => ({\n  type: REMOVE_PRODUCT,\n  payload,\n});\n\nexport const setProductId = (payload: number) => ({\n  type: SET_ID_REMOTE_PRODUCT,\n  payload,\n});\n\nexport const setIdForViewProduct = (payload: number) => ({\n  type: SET_ID_VIEW_PRODUCT,\n  payload,\n});\n","import { RootState } from '.';\n\nexport const hasModalAdd = (state: RootState) => state.isModalAdd;\nexport const hasModalRemove = (state: RootState) => state.isModalRemove;\nexport const hasModalEdit = (state: RootState) => state.isModalEdit;\nexport const getProducts = (state: RootState) => state.allProducts;\nexport const getIdRemoteProduct = (state: RootState) => state.idRemoteProduct;\nexport const getIdForViewProduct = (state: RootState) => state.idForViewProduct;\nexport const getViewProduct = (state: RootState) => state.viewProduct;\n","import React, { useState } from 'react';\nimport '../ModalEdit/ModalEdit.scss';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { hasModalAdd } from '../../store/selectors';\nimport { addOneProduct, closeModalAdd } from '../../store/actions';\n\nexport const ModalAdd: React.FC = () => {\n  const isOpen = useSelector(hasModalAdd);\n  const dispatch = useDispatch();\n  const [imageUrl, setImageUrl] = useState('');\n  const [productName, setName] = useState('');\n  const [count, setCount] = useState<number>(0);\n  const [sideWidth, setSideWidth] = useState<number>(0);\n  const [sideHeight, setSideHeight] = useState<number>(0);\n  const [weight, setWeight] = useState<number>(0);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handlerCloseModal = () => {\n    dispatch(closeModalAdd());\n  };\n\n  const handlerInputs = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'imageUrl':\n        setImageUrl(value);\n        break;\n      case 'name':\n        setName(value);\n        break;\n      case 'count':\n        setCount(+value.replaceAll(/[^0-9]/gi, ''));\n\n        break;\n      case 'sideWidth':\n        setSideWidth(+value.replaceAll(/[^0-9]/gi, ''));\n\n        break;\n      case 'sideHeight':\n        setSideHeight(+value.replaceAll(/[^0-9]/gi, ''));\n\n        break;\n      case 'weight':\n        setWeight(+value.replaceAll(/[^0-9]/gi, ''));\n\n        break;\n      default:\n    }\n  };\n\n  const clearInputs = () => {\n    setImageUrl('');\n    setName('');\n    setCount(0);\n    setSideWidth(0);\n    setSideHeight(0);\n    setWeight(0);\n  };\n\n  const hasValid = (product: Product) => {\n    if (product.count <= 0) {\n      setErrorMessage('Enter correct count');\n\n      return false;\n    }\n\n    if (product.size.height <= 0) {\n      setErrorMessage('Enter correct height');\n\n      return false;\n    }\n\n    if (product.size.width <= 0) {\n      setErrorMessage('Enter correct width');\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const addNewProduct = () => {\n    const newProduct: Product = {\n      id: 0,\n      imageUrl,\n      name: productName,\n      count: count || 0,\n      size: {\n        width: sideWidth || 0,\n        height: sideHeight || 0,\n      },\n      weight: `${weight || 0}g`,\n      comments: [],\n    };\n\n    if (hasValid(newProduct)) {\n      dispatch(addOneProduct(newProduct));\n      clearInputs();\n      dispatch(closeModalAdd());\n    }\n  };\n\n  const handlerSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    addNewProduct();\n  };\n\n  Modal.setAppElement('#root');\n\n  return (\n    <div>\n      <Modal\n        isOpen={isOpen}\n        onRequestClose={handlerCloseModal}\n        className=\"Modal__add\"\n      >\n        <h2>Add new product</h2>\n\n        <form\n          onSubmit={handlerSubmit}\n          className=\"Modal__edit__form\"\n        >\n          <label\n            htmlFor=\"name\"\n            className=\"Modal__edit__input\"\n          >\n            <span>\n              Product name\n              &nbsp;\n            </span>\n            <input\n              type=\"text\"\n              id=\"name\"\n              required\n              placeholder=\"Product name\"\n              value={productName}\n              name=\"name\"\n              onChange={handlerInputs}\n            />\n          </label>\n          <label\n            htmlFor=\"imageUrl\"\n            className=\"Modal__edit__input\"\n          >\n            <span>\n              ImageUrl\n              &nbsp;\n            </span>\n            <input\n              type=\"text\"\n              id=\"imageUrl\"\n              required\n              placeholder=\"ImageUrl\"\n              value={imageUrl}\n              name=\"imageUrl\"\n              onChange={handlerInputs}\n            />\n          </label>\n          <label\n            htmlFor=\"count\"\n            className=\"Modal__edit__input\"\n          >\n            <span>\n              Count\n              &nbsp;\n            </span>\n            <input\n              type=\"text\"\n              id=\"count\"\n              required\n              placeholder=\"Count\"\n              value={count}\n              name=\"count\"\n              onChange={handlerInputs}\n            />\n          </label>\n          <label\n            htmlFor=\"sideWidth\"\n            className=\"Modal__edit__input\"\n          >\n            <span>\n              Width\n              &nbsp;\n            </span>\n            <input\n              type=\"text\"\n              id=\"sideWidth\"\n              required\n              placeholder=\"Width\"\n              value={sideWidth}\n              name=\"sideWidth\"\n              onChange={handlerInputs}\n            />\n          </label>\n          <label\n            htmlFor=\"sideHeight\"\n            className=\"Modal__edit__input\"\n          >\n            <span>\n              Height\n              &nbsp;\n            </span>\n            <input\n              type=\"text\"\n              id=\"sideHeight\"\n              required\n              placeholder=\"Height\"\n              value={sideHeight}\n              name=\"sideHeight\"\n              onChange={handlerInputs}\n            />\n          </label>\n          <label\n            htmlFor=\"weight\"\n            className=\"Modal__edit__input\"\n          >\n            <span>\n              Weight (g)\n              &nbsp;\n            </span>\n            <input\n              type=\"text\"\n              id=\"weight\"\n              required\n              placeholder=\"Weight\"\n              value={weight}\n              name=\"weight\"\n              onChange={handlerInputs}\n            />\n          </label>\n          {\n            errorMessage\n            && (\n              <span className=\"Modal__error\">\n                {errorMessage}\n              </span>\n            )\n          }\n          <button\n            type=\"submit\"\n          >\n            Save\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={handlerCloseModal}\n          >\n            close\n          </button>\n        </form>\n      </Modal>\n    </div>\n  );\n};\n","import React from 'react';\nimport './ModalRemove.scss';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getIdRemoteProduct, hasModalRemove } from '../../store/selectors';\nimport { closeModalRemove, removeProduct } from '../../store/actions';\n\nexport const ModalRemove: React.FC = () => {\n  Modal.setAppElement('#root');\n  const isOpen = useSelector(hasModalRemove);\n  const productId = useSelector(getIdRemoteProduct);\n  const dispatch = useDispatch();\n\n  const handlerDelete = async () => {\n    await dispatch(removeProduct(productId));\n    dispatch(closeModalRemove());\n  };\n\n  const handlerCloseModal = async () => {\n    dispatch(closeModalRemove());\n  };\n\n  return (\n    <div>\n      <Modal\n        isOpen={isOpen}\n        onRequestClose={handlerCloseModal}\n        className=\"Modal__add\"\n      >\n        <h2>Delete product?</h2>\n\n        <button\n          type=\"button\"\n          onClick={handlerDelete}\n        >\n          Yes\n        </button>\n        <button\n          type=\"button\"\n          onClick={handlerCloseModal}\n        >\n          Close\n        </button>\n      </Modal>\n    </div>\n  );\n};\n","import React from 'react';\nimport './Loader.scss';\n\nexport const Loader: React.FC = () => (\n  <div className=\"Loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport './ProductsList.scss';\n\nimport productsServer from '../../api/products.json';\nimport {\n  addProductList,\n  openModalAdd,\n  openModalRemove,\n  setIdForViewProduct,\n  setProductId,\n} from '../../store/actions';\nimport { getProducts } from '../../store/selectors';\nimport { ModalAdd } from '../ModalAdd';\nimport { ModalRemove } from '../ModalRemove';\nimport { Loader } from '../Loader';\n\nexport const ProductsList: React.FC = () => {\n  const dispatch = useDispatch();\n  const products = useSelector(getProducts);\n\n  useEffect(() => {\n    dispatch(addProductList(productsServer));\n  }, []);\n\n  const openModal = () => {\n    dispatch(openModalAdd());\n  };\n\n  const handlerDeleteProduct = (event: React.MouseEvent<HTMLButtonElement>) => {\n    dispatch(openModalRemove());\n    dispatch(setProductId(+event.currentTarget.value));\n  };\n\n  const handlerDetailsProduct = (event: React.MouseEvent<HTMLButtonElement>) => {\n    dispatch(setIdForViewProduct(+event.currentTarget.value));\n  };\n\n  if (products.length === 0) {\n    return (\n      <Loader />\n    );\n  }\n\n  return (\n    <>\n      <ul className=\"ProductsList__list\">\n        {\n          products.map((product) => (\n            <li\n              key={product.id}\n              className=\"ProductsList__item\"\n            >\n              <img\n                src={product.imageUrl}\n                alt={product.name}\n                className=\"ProductsList__img\"\n              />\n              <h3>\n                {product.name}\n              </h3>\n              <span>\n                Count:\n                &nbsp;\n                {product.count}\n              </span>\n              <span>\n                Size:\n                &nbsp;\n                {product.size.width}\n                х\n                {product.size.height}\n              </span>\n              <span>\n                Weight:\n                &nbsp;\n                {product.weight}\n              </span>\n              <button\n                type=\"button\"\n                value={product.id}\n                onClick={handlerDetailsProduct}\n              >\n                Details\n              </button>\n              <button\n                type=\"button\"\n                value={product.id}\n                onClick={handlerDeleteProduct}\n              >\n                Delete\n              </button>\n            </li>\n          ))\n        }\n        <li className=\"ProductsList__item\">\n          <button\n            type=\"button\"\n            className=\"ProductsList__add-plus\"\n            onClick={openModal}\n          >\n            +\n          </button>\n        </li>\n      </ul>\n      <ModalRemove />\n      <ModalAdd />\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\n\nimport commentsServer from '../../api/comments.json';\nimport { getIdForViewProduct } from '../../store/selectors';\n\nexport const CommentsList: React.FC = () => {\n  const productId = useSelector(getIdForViewProduct);\n  const [productComments, setProductComments] = useState<ProductCommets[]>([]);\n\n  const getComments = (id: number) => {\n    setProductComments(commentsServer.filter((comment) => comment.productId === id));\n  };\n\n  useEffect(() => {\n    getComments(productId);\n  }, [productId]);\n\n  const deleteComment = (id: number) => {\n    setProductComments((prevProductComments) => (\n      prevProductComments.filter((comment) => (comment.id !== id))\n    ));\n  };\n\n  const handlerDelete = (event: React.MouseEvent<HTMLButtonElement>) => {\n    const { value } = event.currentTarget;\n\n    deleteComment(+value);\n  };\n\n  return (\n    <>\n      {\n        productComments.map((comment) => (\n          <li key={comment.id}>\n            <span>\n              {comment.description}\n            </span>\n            <button\n              type=\"button\"\n              value={comment.id}\n              onClick={handlerDelete}\n            >\n              X\n            </button>\n          </li>\n        ))\n      }\n    </>\n  );\n};\n","import React, { useEffect, useState } from 'react';\nimport './ModalEdit.scss';\nimport Modal from 'react-modal';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getViewProduct, hasModalEdit } from '../../store/selectors';\nimport { editProduct, closeModalEdit } from '../../store/actions';\n\nexport const ModalEdit: React.FC = () => {\n  const isOpen = useSelector(hasModalEdit);\n  const selectedProduct = useSelector(getViewProduct);\n  const dispatch = useDispatch();\n  const [imageUrl, setImageUrl] = useState('');\n  const [productName, setName] = useState('');\n  const [count, setCount] = useState<number>(0);\n  const [sideWidth, setSideWidth] = useState<number>(0);\n  const [sideHeight, setSideHeight] = useState<number>(0);\n  const [weight, setWeight] = useState<number>(0);\n  const [errorMessage, setErrorMessage] = useState('');\n\n  const handlerCloseModal = () => {\n    dispatch(closeModalEdit());\n  };\n\n  const getInfo = () => {\n    if (selectedProduct) {\n      setImageUrl(selectedProduct.imageUrl);\n      setName(selectedProduct.name);\n      setCount(selectedProduct.count);\n      setSideWidth(selectedProduct.size.width);\n      setSideHeight(selectedProduct.size.height);\n      setWeight(+selectedProduct.weight.replaceAll(/[^0-9]/gi, ''));\n    }\n  };\n\n  useEffect(() => {\n    getInfo();\n  }, []);\n\n  const handlerInputs = (event: React.ChangeEvent<HTMLInputElement>) => {\n    const { name, value } = event.currentTarget;\n\n    switch (name) {\n      case 'imageUrl':\n        setImageUrl(value);\n        break;\n      case 'name':\n        setName(value);\n        break;\n      case 'count':\n        setCount(+value.replaceAll(/[^0-9]/gi, ''));\n\n        break;\n      case 'sideWidth':\n        setSideWidth(+value.replaceAll(/[^0-9]/gi, ''));\n\n        break;\n      case 'sideHeight':\n        setSideHeight(+value.replaceAll(/[^0-9]/gi, ''));\n\n        break;\n      case 'weight':\n        setWeight(+value.replaceAll(/[^0-9]/gi, ''));\n\n        break;\n      default:\n    }\n  };\n\n  const hasValid = (product: Product) => {\n    if (product.count <= 0) {\n      setErrorMessage('Enter correct count');\n\n      return false;\n    }\n\n    if (product.size.height <= 0) {\n      setErrorMessage('Enter correct height');\n\n      return false;\n    }\n\n    if (product.size.width <= 0) {\n      setErrorMessage('Enter correct width');\n\n      return false;\n    }\n\n    return true;\n  };\n\n  const saveNewProduct = () => {\n    if (!selectedProduct) {\n      return;\n    }\n\n    const newProduct: Product = {\n      id: selectedProduct.id,\n      imageUrl,\n      name: productName,\n      count: count || 0,\n      size: {\n        width: sideWidth || 0,\n        height: sideHeight || 0,\n      },\n      weight: `${weight || 0}g`,\n      comments: [],\n    };\n\n    if (hasValid(newProduct)) {\n      dispatch(editProduct(newProduct));\n      dispatch(closeModalEdit());\n    }\n  };\n\n  const handlerSubmit = (event: React.FormEvent<HTMLFormElement>) => {\n    event.preventDefault();\n\n    saveNewProduct();\n  };\n\n  Modal.setAppElement('#root');\n\n  return (\n    <div>\n      <Modal\n        isOpen={isOpen}\n        onRequestClose={handlerCloseModal}\n        className=\"Modal__edit\"\n      >\n        <h2>Edit product</h2>\n\n        <form\n          onSubmit={handlerSubmit}\n          className=\"Modal__edit__form\"\n        >\n          <label\n            htmlFor=\"name\"\n            className=\"Modal__edit__input\"\n          >\n            <span>\n              Product name\n              &nbsp;\n            </span>\n            <input\n              type=\"text\"\n              id=\"name\"\n              required\n              placeholder=\"Product name\"\n              value={productName}\n              name=\"name\"\n              onChange={handlerInputs}\n            />\n          </label>\n          <label\n            htmlFor=\"imageUrl\"\n            className=\"Modal__edit__input\"\n          >\n            <span>\n              ImageUrl\n              &nbsp;\n            </span>\n            <input\n              type=\"text\"\n              id=\"imageUrl\"\n              required\n              placeholder=\"ImageUrl\"\n              value={imageUrl}\n              name=\"imageUrl\"\n              onChange={handlerInputs}\n            />\n          </label>\n          <label\n            htmlFor=\"count\"\n            className=\"Modal__edit__input\"\n          >\n            <span>\n              Count\n              &nbsp;\n            </span>\n            <input\n              type=\"text\"\n              id=\"count\"\n              required\n              placeholder=\"Count\"\n              value={count}\n              name=\"count\"\n              onChange={handlerInputs}\n            />\n          </label>\n          <label\n            htmlFor=\"sideWidth\"\n            className=\"Modal__edit__input\"\n          >\n            <span>\n              Width\n              &nbsp;\n            </span>\n            <input\n              type=\"text\"\n              id=\"sideWidth\"\n              required\n              placeholder=\"Width\"\n              value={sideWidth}\n              name=\"sideWidth\"\n              onChange={handlerInputs}\n            />\n          </label>\n          <label\n            htmlFor=\"sideHeight\"\n            className=\"Modal__edit__input\"\n          >\n            <span>\n              Height\n              &nbsp;\n            </span>\n            <input\n              type=\"text\"\n              id=\"sideHeight\"\n              required\n              placeholder=\"Height\"\n              value={sideHeight}\n              name=\"sideHeight\"\n              onChange={handlerInputs}\n            />\n          </label>\n          <label\n            htmlFor=\"weight\"\n            className=\"Modal__edit__input\"\n          >\n            <span>\n              Weight (g)\n              &nbsp;\n            </span>\n            <input\n              type=\"text\"\n              id=\"weight\"\n              required\n              placeholder=\"Weight\"\n              value={weight}\n              name=\"weight\"\n              onChange={handlerInputs}\n            />\n          </label>\n          {\n            errorMessage\n            && (\n              <span className=\"Modal__error\">\n                {errorMessage}\n              </span>\n            )\n          }\n          <button\n            type=\"submit\"\n          >\n            Save\n          </button>\n\n          <button\n            type=\"button\"\n            onClick={handlerCloseModal}\n          >\n            close\n          </button>\n        </form>\n      </Modal>\n    </div>\n  );\n};\n","import React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { openModalEdit, setIdForViewProduct, setViewProductEdit } from '../../store/actions';\n\nimport {\n  getIdForViewProduct,\n  getProducts,\n  getViewProduct,\n  hasModalEdit,\n} from '../../store/selectors';\nimport { CommentsList } from '../CommentsList';\nimport { ModalEdit } from '../ModalEdit';\nimport './ViewProduct.scss';\n\nexport const ViewProduct: React.FC = () => {\n  const dispatch = useDispatch();\n  const productId = useSelector(getIdForViewProduct);\n  const allProduct = useSelector(getProducts);\n  const viewProduct = useSelector(getViewProduct);\n  const isModalEdit = useSelector(hasModalEdit);\n\n  useEffect(() => {\n    if (productId !== 0) {\n      const product = allProduct.find((item) => (item.id === productId)) || null;\n\n      if (product) {\n        dispatch(setViewProductEdit(product));\n      } else {\n        dispatch(setViewProductEdit(null));\n      }\n    }\n  }, [productId, isModalEdit]);\n\n  const handlerClose = () => {\n    dispatch(setIdForViewProduct(0));\n  };\n\n  const handlerEdit = () => {\n    dispatch(openModalEdit());\n  };\n\n  if (!viewProduct || productId === 0) {\n    return (\n      <div className=\"ViewProduct\">\n        <span>Select product</span>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"ViewProduct\">\n      <img\n        className=\"ViewProduct__img\"\n        src={viewProduct.imageUrl}\n        alt={viewProduct.name}\n      />\n      <h2 className=\"ViewProduct__title\">\n        {viewProduct.name}\n      </h2>\n      <span>\n        Count:\n        &nbsp;\n        {viewProduct.count}\n      </span>\n      <span>\n        Size:\n        &nbsp;\n        {viewProduct.size.width}\n        х\n        {viewProduct.size.height}\n      </span>\n      <span>\n        Weight:\n        &nbsp;\n        {viewProduct.weight}\n      </span>\n      <ul>\n        <CommentsList />\n      </ul>\n      <button\n        type=\"button\"\n        onClick={handlerClose}\n      >\n        Close\n      </button>\n      <button\n        type=\"button\"\n        onClick={handlerEdit}\n      >\n        Edit\n      </button>\n      <ModalEdit />\n    </div>\n  );\n};\n","import React from 'react';\nimport './App.scss';\nimport { ProductsList } from './components/ProductsList';\nimport { ViewProduct } from './components/ViewProduct';\n\nexport const App: React.FC = () => {\n  return (\n    <div className=\"App\">\n      <h1 className=\"App__title\">Shop</h1>\n      <ProductsList />\n      <ViewProduct />\n    </div>\n  );\n};\n","import { createStore, AnyAction } from 'redux';\nimport {\n  ADD_PRODUCT,\n  ADD_PRODUCT_LIST,\n  CLOSE_MODAL_ADD,\n  CLOSE_MODAL_EDIT,\n  CLOSE_MODAL_REMOVE,\n  EDIT_PRODUCT,\n  OPEN_MODAL_ADD,\n  OPEN_MODAL_EDIT,\n  OPEN_MODAL_REMOVE,\n  REMOVE_PRODUCT,\n  SET_ID_REMOTE_PRODUCT,\n  SET_ID_VIEW_PRODUCT,\n  SET_VIEW_PRODUCT,\n} from './actions';\n\nexport type RootState = {\n  isModalAdd: boolean;\n  isModalRemove: boolean;\n  isModalEdit: boolean;\n  idRemoteProduct: number;\n  idForViewProduct: number;\n  allProducts: Product[];\n  viewProduct: Product | null;\n};\n\nexport const initialState: RootState = {\n  isModalAdd: false,\n  isModalRemove: false,\n  isModalEdit: false,\n  idRemoteProduct: 0,\n  idForViewProduct: 0,\n  allProducts: [],\n  viewProduct: null,\n};\n\nconst rootReducer = (state = initialState, action: AnyAction) => {\n  switch (action.type) {\n    case EDIT_PRODUCT:\n      return {\n        ...state,\n        allProducts: state.allProducts.map((product) => {\n          if (product.id === action.payload.id) {\n            return action.payload;\n          }\n\n          return product;\n        }),\n      };\n\n    case SET_VIEW_PRODUCT:\n      return { ...state, viewProduct: { ...action.payload } };\n\n    case SET_ID_VIEW_PRODUCT:\n      return { ...state, idForViewProduct: action.payload };\n\n    case SET_ID_REMOTE_PRODUCT:\n      return { ...state, idRemoteProduct: action.payload };\n\n    case CLOSE_MODAL_ADD:\n      return { ...state, isModalAdd: action.payload };\n\n    case OPEN_MODAL_ADD:\n      return { ...state, isModalAdd: action.payload };\n\n    case CLOSE_MODAL_EDIT:\n      return { ...state, isModalEdit: action.payload };\n\n    case OPEN_MODAL_EDIT:\n      return { ...state, isModalEdit: action.payload };\n\n    case OPEN_MODAL_REMOVE:\n      return { ...state, isModalRemove: action.payload };\n\n    case CLOSE_MODAL_REMOVE:\n      return { ...state, isModalRemove: action.payload };\n\n    case ADD_PRODUCT:\n      return { ...state, allProducts: [...state.allProducts, action.payload] };\n\n    case ADD_PRODUCT_LIST:\n      return { ...state, allProducts: [...state.allProducts, ...action.payload] };\n\n    case REMOVE_PRODUCT:\n      return {\n        ...state,\n        allProducts: state.allProducts.filter((product) => (product.id !== action.payload)),\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst store = createStore(\n  rootReducer,\n);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.scss';\nimport { App } from './App';\nimport store from './store';\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}